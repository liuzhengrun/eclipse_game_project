<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- mysql连接池配置 -->
	<bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="driverClassName" value="${spring.datasource.driver-class-name}" />
        <property name="jdbcUrl" value="${spring.datasource.url}" />
        <property name="username" value="${spring.datasource.username}" />
        <property name="password" value="${spring.datasource.password}" />
        <!-- 连接只读数据库时配置为true， 保证安全 -->
        <property name="readOnly" value="${spring.datasource.hikari.read-only}" />
        <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
        <property name="connectionTimeout" value="${spring.datasource.hikari.connection-timeout}" />
        <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
        <property name="idleTimeout" value="${spring.datasource.hikari.idle-timeout}" />
        <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL 
            wait_timeout参数（show variables like '%timeout%';） -->
        <property name="maxLifetime" value="${spring.datasource.hikari.max-lifetime}" />
        <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
        <property name="maximumPoolSize" value="${spring.datasource.hikari.maximum-pool-size}" />
        <property name="minimumIdle" value="${spring.datasource.hikari.minimum-idle}" />
    </bean>
    
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 数据源 -->
        <property name="dataSource" ref="hikariDataSource" />
        <!-- 别名包 -->
        <property name="typeAliasesPackage"  value="${mybatis.typeAliasesPackage}"/>
        <!-- 配置mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 自动扫描mapping.xml文件，**表示迭代查找,SQL映射文件 -->
        <property name="mapperLocations" value="${mybatis.mapperLocations}" />
    </bean>
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="${mybatis.basePackage}" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 通过processPropertyPlaceHolders属性的配置，将程序引入processPropertyPlaceHolders函数中来完成属性文件的加载 -->
        <property name="processPropertyPlaceHolders" value="true"/>
    </bean>
    
    <!-- 配置Spring的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="hikariDataSource" />
	</bean>
    
</beans>